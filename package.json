{
  "name": "@la-ots/pelican",
  "version": "2.0.5",
  "description": "Pelican Design System for Louisiana OTS",
  "repository": "git://github.com/la-ots/pelican.git",
  "license": "CC0-1.0",
  "main": "dist/js/pelican.js",
  "module": "dist/js/pelican.esm.js",
  "style": "dist/css/pelican.css",
  "bugs": "https://github.com/la-ots/pelican/issues",
  "devDependencies": {
    "@11ty/eleventy": "^2.0.1",
    "@11ty/eleventy-navigation": "^0.3.5",
    "@11ty/eleventy-plugin-inclusive-language": "^1.0.3",
    "@11ty/eleventy-plugin-syntaxhighlight": "^5.0.0",
    "@la-ots/eslint-config": "^1.0.1",
    "@la-ots/prettier-config": "^1.0.0",
    "@la-ots/stylelint-config": "^1.0.0",
    "autoprefixer": "^10.4.16",
    "bootstrap": "^5.3.2",
    "chokidar-cli": "^3.0.0",
    "clean-css-cli": "^5.6.3",
    "cross-env": "^7.0.3",
    "eleventy-plugin-nesting-toc": "^1.3.0",
    "eleventy-plugin-reading-time": "^0.0.1",
    "esbuild": "^0.19.9",
    "eslint": "^8.56.0",
    "eslint-plugin-prettier": "^5.0.1",
    "hasha": "^5.2.2",
    "markdown-it-anchor": "^8.6.7",
    "nodemon": "^3.0.2",
    "npm-run-all": "^4.1.5",
    "postcss": "^8.4.32",
    "postcss-cli": "^11.0.0",
    "prettier": "^3.1.1",
    "rimraf": "^5.0.1",
    "sass": "^1.69.5",
    "terser": "^5.26.0"
  },
  "peerDependencies": {
    "@popperjs/core": "^2.11.7",
    "bootstrap": "^5.3.2"
  },
  "scripts": {
    "build-dist": "npm-run-all clean --parallel --aggregate-output css-dist js-dist",
    "build-dist-docs": "npm-run-all clean css-dist js-dist docs:build",
    "clean": "rimraf dist",
    "lint": "npm-run-all --parallel --aggregate-output js:lint css:lint",
    "css-dist": "npm-run-all css:compile css:prefix css:minify",
    "css-dev": "npm-run-all css:compile css:prefix",
    "css:compile": "sass --load-path=node_modules --style expanded --embed-sources --no-error-css scss/:dist/css/",
    "css:prefix": "postcss --config build/postcss.config.js --replace \"dist/css/*.css\" \"!dist/css/*.min.css\"",
    "css:minify": "cleancss -O1 --format breakWith=lf --with-rebase --source-map --source-map-inline-sources --output dist/css/ --batch --batch-suffix \".min\" \"dist/css/*.css\" \"!dist/css/*.min.css\"",
    "css:lint": "npm-run-all --aggregate-output --continue-on-error --parallel css:lint:*",
    "css:lint:stylelint": "stylelint **/*.{css,scss} || exit 0",
    "css:lint:fix": "stylelint **/*.{css,scss} --fix",
    "format:check": "prettier --check .",
    "format": "prettier --write --ignore-unknown .",
    "js-dist": "npm-run-all js:compile js:minify",
    "js-dev": "npm-run-all js:compile",
    "js:compile": "npm-run-all --aggregate-output --parallel js:compile:*",
    "js:compile:standalone": "cross-env BUNDLE=false node ./build/esbuild.config.js",
    "js:compile:standalone-esm": "cross-env BUNDLE=false ESM=true node ./build/esbuild.config.js",
    "js:compile:bundle": "cross-env BUNDLE=true node ./build/esbuild.config.js",
    "js:minify": "npm-run-all --aggregate-output --parallel js:minify:*",
    "js:minify:standalone": "terser --compress passes=2 --mangle --comments \"/^!/\" --source-map \"content=dist/js/pelican.js.map,includeSources,url=pelican.min.js.map\" --output dist/js/pelican.min.js dist/js/pelican.js",
    "js:minify:standalone-esm": "terser --compress passes=2 --mangle --comments \"/^!/\" --source-map \"content=dist/js/pelican.esm.js.map,includeSources,url=pelican.esm.min.js.map\" --output dist/js/pelican.esm.min.js dist/js/pelican.esm.js",
    "js:minify:bundle": "terser --compress passes=2 --mangle --comments \"/^!/\" --source-map \"content=dist/js/pelican.bundle.js.map,includeSources,url=pelican.bundle.min.js.map\" --output dist/js/pelican.bundle.min.js dist/js/pelican.bundle.js",
    "js:lint": "eslint js/pelican.js docs/js/*.js || exit 0",
    "js:lint:fix": "eslint js/pelican.js docs/js/*.js --fix",
    "docs:serve": "cross-env ELEVENTY_ENV=development npx @11ty/eleventy --config=build/.eleventy.js --serve",
    "docs:build": "cross-env ELEVENTY_ENV=production npx @11ty/eleventy --config=build/.eleventy.js",
    "watch": "npm-run-all css-dev js-dev --parallel --continue-on-error watch:css watch:js",
    "watch:css": "chokidar \"scss/*.scss\" -c \"npm run css-dev\"",
    "watch:js": "chokidar \"js/*js\" -c \"npm run js-dev\"",
    "watch:docs": "npm-run-all css-dev js-dev --parallel --continue-on-error watch:css watch:js docs:serve"
  }
}
