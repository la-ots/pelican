.toggle-token {
  // we are overriding Bootstrap by using nested rules.
  // if the default theme is removed, Bootstrap defaults take over.
  &.form-check {
    display: inline-block;
    padding: 0;
    margin: 0 0 4px !important;

    .form-check-label {
      position: relative;
      padding: 4px 16px 4px 32px;
      background-color: $white;
      border: 2px solid $ui;
      border-radius: 16px;

      .fas {
        position: absolute;
        top: 8px;
        left: 10px;
        color: $ui;

        &:first-of-type {
          opacity: 1;
        }

        &:last-of-type {
          opacity: 0;
        }
      }

      &:hover,
      &:active {
        cursor: pointer;
      }
    }

    .form-check-input {
      @extend .sr-only !optional;

      &:checked {
        + .form-check-label {
          color: $white;
          background-color: $ui-priority;
          border-color: $ui-priority;

          .fas {
            position: absolute;
            top: 8px;
            left: 10px;
            color: $white;

            &:first-of-type {
              opacity: 0;
            }

            &:last-of-type {
              opacity: 1;
            }
          }
        }
      }

      &:focus,
      &.focus {
        + .form-check-label {
          @include tab-focus;
        }
      }
    }
  }
  .form-check-input[disabled] ~ .form-check-label {
		border-color: fade-out($ui, .5);
		color: &ui;
		.fas {
			&:first-of-type {
				opacity: .5;
			}
		}
		&:hover, &:active {
			cursor: default;
		}
	}
	.form-check-input:checked[disabled] ~ .form-check-label {
		border-color: transparent!important;
		background-color: fade-out($ui-priority, .5)!important;
	}
}
.was-validated .toggle-token .form-check-input:invalid ~ .form-check-label {
  border-color: $danger;
}
.was-validated .toggle-token .form-check-input:checked:valid ~ .form-check-label {
  color: $white;
  background-color: $success;
  border-color: $success;
}
// big switch
.custom-switch.custom-switch-large {
  width: 100%;
  height: 40px;
  min-height: unset;
  padding: 0;

  .custom-control-label {
    display: block;
    color: transparent;

    &::before {
      top: 0;
      left: 0;
      width: 100%;
      height: 40px;
      border-width: 2px;
      border-radius: 20px;
    }

    &::after {
      top: 4px;
      left: 4px;
      width: 32px;
      height: 32px;
      border-radius: 50%;
      transition: left ease-in-out 250ms;
    }
  }

  .custom-switch-text {
    position: absolute;
    top: 50%;
    left: 50%;
    display: block;
    transition: color ease-out 150ms;
    transform: translateX(-50%) translateY(-50%);

    &.inactive {
      z-index: 10;
      color: $dark;
    }

    &.active {
      z-index: 0;
      color: transparent;
    }
  }

  .custom-control-input:checked ~ .custom-control-label {
    &::after {
      left: calc(100% - 36px);
      transform: unset;
    }
  }

  .custom-control-input:checked ~ .custom-switch-text {
    &.inactive {
      color: transparent;
    }

    &.active {
      z-index: 11;
      color: $white;
    }
  }
}
.custom-control-switch {
  &:focus,
  &.focus {
    border: 1px solid $input-border-color;
    box-shadow: none;
  }
}
.custom-file-label,
.custom-file-input,
.custom-file {
  &:focus,
  &.focus {
    @include tab-focus;
  }
}

